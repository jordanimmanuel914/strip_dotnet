version: 17.8.0.{build}
image: Visual Studio 2017

environment:
  STRIPE_TEST_SK: sk_test_eBgAzVoEpJKfYjD9nf2YoyMM
  # If you bump this, don't forget to bump `MinimumMockVersion` in `BaseStripeTest.cs` as well.
  STRIPE_MOCK_VERSION: 0.25.0

deploy:
- provider: NuGet
  api_key:
    secure: 2+Gqp6u9nwfDPD/Fw6T5vcW4A9qsTSQNysK1f4ZXa7r+2a3/d/f1f2dZYWvwke7F
  on:
    appveyor_repo_tag: true

cache:
  - stripe-mock -> appveyor.yml

install:
  - ps: |
      If(!(Test-Path "stripe-mock"))
      {
        New-Item -Path . -Name "stripe-mock" -ItemType "directory" -Force | Out-Null
        wget "https://github.com/stripe/stripe-mock/releases/download/v$($env:STRIPE_MOCK_VERSION)/stripe-mock_$($env:STRIPE_MOCK_VERSION)_windows_amd64.tar.gz" -OutFile "$($pwd)\stripe-mock\stripe-mock.tar.gz"
        7z.exe e -y -o"stripe-mock" "stripe-mock\stripe-mock.tar.gz" | Out-Null
        7z.exe x -y -o"stripe-mock" "stripe-mock\stripe-mock.tar" | Out-Null
      }
      $app = Start-Process -FilePath "stripe-mock\stripe-mock.exe" -NoNewWindow -PassThru
      Write-Host ("stripe-mock running, Id = $($app.Id)`n") -ForegroundColor Green

before_build:
  - ps: Write-Host $("`n               HOST INFORMATION               `n") -BackgroundColor DarkCyan
  - dotnet --info
  - ps: Write-Host $("`n               RESTORING PACKAGES FOR ALL FRAMEWORKS               `n") -BackgroundColor DarkCyan
  - dotnet restore src\

build:
  parallel: true

build_script:
  - ps: Write-Host $("`n               BUILDING EVERYTHING               `n") -BackgroundColor DarkCyan
  - dotnet build -c Release src\Stripe.net
  - dotnet build -c Debug src\Stripe.net
  - dotnet build src\StripeTests -c Debug

after_build:
  - ps: Write-Host $("`n               PACKING UP               `n") -BackgroundColor DarkCyan
  - dotnet pack -c Release src\Stripe.net

test_script:
  - ps: Write-Host $("`n               RUNNING THE NEW XUNIT + STRIPE-MOCK TESTS               `n") -BackgroundColor DarkCyan
  - dotnet test src\StripeTests\StripeTests.csproj

artifacts:
  - path: '**\*.nupkg'

# these commands tell appveyor to open an RDP session for debugging
#init:
#- ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
#
#on_finish:
#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
